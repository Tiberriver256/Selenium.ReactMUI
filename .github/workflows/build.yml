name: Build

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}
  # Disable Husky
  HUSKY: 0

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3.0.0
        with:
          lfs: true
          fetch-depth: 0
      - name: "Install .NET Core SDK"
        uses: actions/setup-dotnet@v2.0.0
      - name: "Dotnet Tool Restore"
        run: dotnet tool restore
        shell: pwsh
      - name: "Dotnet Cake Build"
        run: dotnet cake --target=Build
        shell: pwsh
      - name: "Dotnet Cake Test"
        run: dotnet cake --target=Test
        shell: pwsh
      - name: "Dotnet Cake Pack"
        run: dotnet cake --target=Pack
        shell: pwsh
      - name: "Publish Artifacts"
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{matrix.os}}
          path: "./Artifacts"

  push-nuget:
    name: "Push NuGet Packages"
    needs: build
    if: github.event_name == 'release'
    environment:
      name: "NuGet"
      url: https://www.nuget.org/packages/Selenium.ReactMUI
    runs-on: windows-latest
    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v3.0.0
        with:
          name: "windows-latest"
      - name: "Dotnet NuGet Push"
        run: |
          Get-ChildItem .\ -Filter *.nupkg |
          Where-Object { !$_.Name.Contains('preview') } |
          ForEach-Object { dotnet nuget push $_ --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} }
        shell: pwsh
